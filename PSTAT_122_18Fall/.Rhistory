geom_line(aes(x = support, y = y, color = "Wass_mean"), fmean.df, size = 0.3) +
geom_line(aes(x = supp, y = den29, color = "Observed"), Denobs.df, size = 1)+
geom_line(aes(x = support, y = ffit, colour = "Fitted"), sub29.df, size = 1) +
geom_ribbon(aes(x = support, ymin = dflx, ymax = dfux), sub29.df, alpha = 0.3) +
geom_line(aes(x = support, y = dflx), sub29.df, colour = "#D2BBFB") +
geom_line(aes(x = support, y = dfux), sub29.df, colour = "#D2BBFB") +
geom_line(aes(x = support, y = flx), sub29.df, colour = "#4358F9", linetype = 2, size = 0.5) +
geom_line(aes(x = support, y = fux), sub29.df, colour = "#4358F9", linetype = 2, size = 0.5) +
ggtitle(" Density Band, # 29  ") +
scale_colour_manual(name = "Density", values = c("#AD83F6", "#F3BB53", "black"),
labels = c("Fitted", "Observed", "Wass_mean"), guide="legend") +
ylab("Density")
density.29
# setwd("~/Documents/GitHub/Density regression/Plots_Test_Oct18")
source("NewCTresult.rdata")
ffit[, 1] <- ffit[, 2]
ffit[, ncol(ffit)] <- ffit[, ncol(ffit)-1]
t = as.vector(t)
dflx = Re(dflx)
dfux = Re(dfux)
library(ggplot2)
library(gridExtra)
library(pipeR)
goodindex <- 1
sub29.df <- data.frame(support = seq(1, 101, length.out = m.Q),
ffit = fpred[goodindex, ],
fux = fux[goodindex, ],
flx = flx[goodindex, ],
dfux = dfux[goodindex, ],
dflx = dflx[goodindex, ])
m.Q = length(t)
goodindex <- 1
sub29.df <- data.frame(support = seq(1, 101, length.out = m.Q),
ffit = fpred[goodindex, ],
fux = fux[goodindex, ],
flx = flx[goodindex, ],
dfux = dfux[goodindex, ],
dflx = dflx[goodindex, ])
goodindex <- 2
sub66.df <- data.frame(support = seq(1, 101, length.out = m.Q),
ffit = fpred[goodindex, ],
fux = fux[goodindex, ],
flx = flx[goodindex, ],
dfux = dfux[goodindex, ],
dflx = dflx[goodindex, ])
Denobs.df <- data.frame(den29 = obered.Den[29, ]%>>%as.matrix()%>>%as.vector(),
den66 = obered.Den[66, ]%>>%as.matrix()%>>%as.vector(),
supp = 1:101)
select.data <- read.csv("~/Documents/GitHub/Density regression/Code/CTdata.selected.csv")
obered.Den <- select.data[, 8:108]
Denobs.df <- data.frame(den29 = obered.Den[29, ]%>>%as.matrix()%>>%as.vector(),
den66 = obered.Den[66, ]%>>%as.matrix()%>>%as.vector(),
supp = 1:101)
density.29 <- ggplot() +
geom_line(aes(x = support, y = y, color = "Wass_mean"), fmean.df, size = 0.3) +
geom_line(aes(x = supp, y = den29, color = "Observed"), Denobs.df, size = 1)+
geom_line(aes(x = support, y = ffit, colour = "Fitted"), sub29.df, size = 1) +
geom_ribbon(aes(x = support, ymin = dflx, ymax = dfux), sub29.df, alpha = 0.3) +
geom_line(aes(x = support, y = dflx), sub29.df, colour = "#D2BBFB") +
geom_line(aes(x = support, y = dfux), sub29.df, colour = "#D2BBFB") +
geom_line(aes(x = support, y = flx), sub29.df, colour = "#4358F9", linetype = 2, size = 0.5) +
geom_line(aes(x = support, y = fux), sub29.df, colour = "#4358F9", linetype = 2, size = 0.5) +
ggtitle(" Density Band, # 29  ") +
scale_colour_manual(name = "Density", values = c("#AD83F6", "#F3BB53", "black"),
labels = c("Fitted", "Observed", "Wass_mean"), guide="legend") +
ylab("Density")
obered.Den <- select.data[, 8:108]
set.seed(20181016)
n = nrow(ffit)
m.F = ncol(ffit)
m.Q = length(t)
index40 <- sample(1:n, size = 40, replace = FALSE) # select 40 subjects randomly
Den.df <- data.frame(density.obs = obered.Den[index40, ]%>>%as.matrix() %>>% t() %>>% as.vector(),
SubID = rep(index40, each = m.F) %>>% as.factor,
support = rep(1:101, 40),
density.fit = ffit[index40, ] %>>% t() %>>% as.vector())
fmean.df <- data.frame(support = seq(0, 101, length.out = 128), y = fpred[3, ] %>>% as.vector())
# plot observed density curves
obs.den <- ggplot() +
geom_line(aes(x = support, y = density.obs, colour = SubID), Den.df) +
ggtitle("Observed Density Curves") +
geom_line(aes(x = support, y = y), fmean.df) + # add the overall mean
theme(legend.position="none")
# plot fitted density curves
fit.den <-  ggplot() +
geom_line(aes(x = support, y = density.fit, colour = SubID), Den.df) +
ggtitle("Fitted Density Curves") +
geom_line(aes(x = support, y = y), fmean.df) + # add the overall mean
theme(legend.position="none") # 800*600
grid.arrange(obs.den, fit.den, ncol = 2)
goodindex <- 1
sub29.df <- data.frame(support = seq(1, 101, length.out = m.Q),
ffit = fpred[goodindex, ],
fux = fux[goodindex, ],
flx = flx[goodindex, ],
dfux = dfux[goodindex, ],
dflx = dflx[goodindex, ])
goodindex <- 2
sub66.df <- data.frame(support = seq(1, 101, length.out = m.Q),
ffit = fpred[goodindex, ],
fux = fux[goodindex, ],
flx = flx[goodindex, ],
dfux = dfux[goodindex, ],
dflx = dflx[goodindex, ])
Denobs.df <- data.frame(den29 = obered.Den[29, ]%>>%as.matrix()%>>%as.vector(),
den66 = obered.Den[66, ]%>>%as.matrix()%>>%as.vector(),
supp = 1:101)
density.29 <- ggplot() +
geom_line(aes(x = support, y = y, color = "Wass_mean"), fmean.df, size = 0.3) +
geom_line(aes(x = supp, y = den29, color = "Observed"), Denobs.df, size = 1)+
geom_line(aes(x = support, y = ffit, colour = "Fitted"), sub29.df, size = 1) +
geom_ribbon(aes(x = support, ymin = dflx, ymax = dfux), sub29.df, alpha = 0.3) +
geom_line(aes(x = support, y = dflx), sub29.df, colour = "#D2BBFB") +
geom_line(aes(x = support, y = dfux), sub29.df, colour = "#D2BBFB") +
geom_line(aes(x = support, y = flx), sub29.df, colour = "#4358F9", linetype = 2, size = 0.5) +
geom_line(aes(x = support, y = fux), sub29.df, colour = "#4358F9", linetype = 2, size = 0.5) +
ggtitle(" Density Band, # 29  ") +
scale_colour_manual(name = "Density", values = c("#AD83F6", "#F3BB53", "black"),
labels = c("Fitted", "Observed", "Wass_mean"), guide="legend") +
ylab("Density")
density.29
density.66 <- ggplot() +
geom_line(aes(x = support, y = y, color = "Wass_mean"), fmean.df, size = 0.3) +
geom_line(aes(x = supp, y = den66, color = "Observed"), Denobs.df, size = 1)+
geom_line(aes(x = support, y = ffit, colour = "Fitted"), sub66.df, size = 1) +
geom_ribbon(aes(x = support, ymin = dflx, ymax = dfux), sub66.df, alpha = 0.3) +
geom_line(aes(x = support, y = dflx), sub66.df, colour = "#D2BBFB") +
geom_line(aes(x = support, y = dfux), sub66.df, colour = "#D2BBFB") +
geom_line(aes(x = support, y = flx), sub66.df, colour = "#4358F9", linetype = 2, size = 0.5) +
geom_line(aes(x = support, y = fux), sub66.df, colour = "#4358F9", linetype = 2, size = 0.5) +
ggtitle(" Density Band, # 66  ") +
scale_colour_manual(name = "Density", values = c("#AD83F6", "#F3BB53", "black"),
labels = c("Fitted", "Observed", "Wass_mean"), guide="legend") +
ylab("Density")
density.66 # 800 * 500
source("NewCTresult.rdata")
ffit[, 1] <- ffit[, 2]
ffit[, ncol(ffit)] <- ffit[, ncol(ffit)-1]
t = as.vector(t)
dflx = Re(dflx)
dfux = Re(dfux)
m.Q = length(t)
library(ggplot2)
library(gridExtra)
library(pipeR)
select.data <- read.csv("~/Documents/GitHub/Density regression/Code/CTdata.selected.csv")
select.data <- read.csv("CTdata.selected.csv")
obered.Den <- select.data[, 8:108]
set.seed(20181016)
n = nrow(ffit)
m.F = ncol(ffit)
m.Q = length(t)
index40 <- sample(1:n, size = 40, replace = FALSE) # select 40 subjects randomly
Den.df <- data.frame(density.obs = obered.Den[index40, ]%>>%as.matrix() %>>% t() %>>% as.vector(),
SubID = rep(index40, each = m.F) %>>% as.factor,
support = rep(1:101, 40),
density.fit = ffit[index40, ] %>>% t() %>>% as.vector())
fmean.df <- data.frame(support = seq(0, 101, length.out = 128), y = fpred[3, ] %>>% as.vector())
# plot observed density curves
obs.den <- ggplot() +
geom_line(aes(x = support, y = density.obs, colour = SubID), Den.df) +
ggtitle("Observed Density Curves") +
geom_line(aes(x = support, y = y), fmean.df) + # add the overall mean
theme(legend.position="none")
# plot fitted density curves
fit.den <-  ggplot() +
geom_line(aes(x = support, y = density.fit, colour = SubID), Den.df) +
ggtitle("Fitted Density Curves") +
geom_line(aes(x = support, y = y), fmean.df) + # add the overall mean
theme(legend.position="none") # 800*600
grid.arrange(obs.den, fit.den, ncol = 2)
goodindex <- 1
sub29.df <- data.frame(support = seq(1, 101, length.out = m.Q),
ffit = fpred[goodindex, ],
fux = fux[goodindex, ],
flx = flx[goodindex, ],
dfux = dfux[goodindex, ],
dflx = dflx[goodindex, ])
goodindex <- 2
sub66.df <- data.frame(support = seq(1, 101, length.out = m.Q),
ffit = fpred[goodindex, ],
fux = fux[goodindex, ],
flx = flx[goodindex, ],
dfux = dfux[goodindex, ],
dflx = dflx[goodindex, ])
Denobs.df <- data.frame(den29 = obered.Den[29, ]%>>%as.matrix()%>>%as.vector(),
den66 = obered.Den[66, ]%>>%as.matrix()%>>%as.vector(),
supp = 1:101)
density.29 <- ggplot() +
geom_line(aes(x = support, y = y, color = "Wass_mean"), fmean.df, size = 0.3) +
geom_line(aes(x = supp, y = den29, color = "Observed"), Denobs.df, size = 1)+
geom_line(aes(x = support, y = ffit, colour = "Fitted"), sub29.df, size = 1) +
geom_ribbon(aes(x = support, ymin = dflx, ymax = dfux), sub29.df, alpha = 0.3) +
geom_line(aes(x = support, y = dflx), sub29.df, colour = "#D2BBFB") +
geom_line(aes(x = support, y = dfux), sub29.df, colour = "#D2BBFB") +
geom_line(aes(x = support, y = flx), sub29.df, colour = "#4358F9", linetype = 2, size = 0.5) +
geom_line(aes(x = support, y = fux), sub29.df, colour = "#4358F9", linetype = 2, size = 0.5) +
ggtitle(" Density Band, # 29  ") +
scale_colour_manual(name = "Density", values = c("#AD83F6", "#F3BB53", "black"),
labels = c("Fitted", "Observed", "Wass_mean"), guide="legend") +
ylab("Density")
density.29
density.66 <- ggplot() +
geom_line(aes(x = support, y = y, color = "Wass_mean"), fmean.df, size = 0.3) +
geom_line(aes(x = supp, y = den66, color = "Observed"), Denobs.df, size = 1)+
geom_line(aes(x = support, y = ffit, colour = "Fitted"), sub66.df, size = 1) +
geom_ribbon(aes(x = support, ymin = dflx, ymax = dfux), sub66.df, alpha = 0.3) +
geom_line(aes(x = support, y = dflx), sub66.df, colour = "#D2BBFB") +
geom_line(aes(x = support, y = dfux), sub66.df, colour = "#D2BBFB") +
geom_line(aes(x = support, y = flx), sub66.df, colour = "#4358F9", linetype = 2, size = 0.5) +
geom_line(aes(x = support, y = fux), sub66.df, colour = "#4358F9", linetype = 2, size = 0.5) +
ggtitle(" Density Band, # 66  ") +
scale_colour_manual(name = "Density", values = c("#AD83F6", "#F3BB53", "black"),
labels = c("Fitted", "Observed", "Wass_mean"), guide="legend") +
ylab("Density")
density.66 # 800 * 500
# setwd("~/Documents/GitHub/Density regression/Plots_Test_Oct18")
source("NewCTresult.rdata")
ffit[, 1] <- ffit[, 2]
ffit[, ncol(ffit)] <- ffit[, ncol(ffit)-1]
t = as.vector(t)
dflx = Re(dflx)
dfux = Re(dfux)
m.Q = length(t)
library(ggplot2)
library(gridExtra)
library(pipeR)
select.data <- read.csv("~/Documents/GitHub/Density regression/Code/CTdata.selected.csv")
obered.Den <- select.data[, 8:108]
set.seed(20181016)
n = nrow(ffit)
m.F = ncol(ffit)
m.Q = length(t)
index40 <- sample(1:n, size = 40, replace = FALSE) # select 40 subjects randomly
Den.df <- data.frame(density.obs = obered.Den[index40, ]%>>%as.matrix() %>>% t() %>>% as.vector(),
SubID = rep(index40, each = m.F) %>>% as.factor,
support = rep(1:101, 40),
density.fit = ffit[index40, ] %>>% t() %>>% as.vector())
fmean.df <- data.frame(support = seq(0, 101, length.out = 128), y = fpred[3, ] %>>% as.vector())
# plot observed density curves
obs.den <- ggplot() +
geom_line(aes(x = support, y = density.obs, colour = SubID), Den.df) +
ggtitle("Observed Density Curves") +
geom_line(aes(x = support, y = y), fmean.df) + # add the overall mean
theme(legend.position="none")
# plot fitted density curves
fit.den <-  ggplot() +
geom_line(aes(x = support, y = density.fit, colour = SubID), Den.df) +
ggtitle("Fitted Density Curves") +
geom_line(aes(x = support, y = y), fmean.df) + # add the overall mean
theme(legend.position="none") # 800*600
grid.arrange(obs.den, fit.den, ncol = 2)
goodindex <- 1
sub29.df <- data.frame(support = seq(1, 101, length.out = m.Q),
ffit = fpred[goodindex, ],
fux = fux[goodindex, ],
flx = flx[goodindex, ],
dfux = dfux[goodindex, ],
dflx = dflx[goodindex, ])
goodindex <- 2
sub66.df <- data.frame(support = seq(1, 101, length.out = m.Q),
ffit = fpred[goodindex, ],
fux = fux[goodindex, ],
flx = flx[goodindex, ],
dfux = dfux[goodindex, ],
dflx = dflx[goodindex, ])
Denobs.df <- data.frame(den29 = obered.Den[29, ]%>>%as.matrix()%>>%as.vector(),
den66 = obered.Den[66, ]%>>%as.matrix()%>>%as.vector(),
supp = 1:101)
density.29 <- ggplot() +
geom_line(aes(x = support, y = y, color = "Wass_mean"), fmean.df, size = 0.3) +
geom_line(aes(x = supp, y = den29, color = "Observed"), Denobs.df, size = 1)+
geom_line(aes(x = support, y = ffit, colour = "Fitted"), sub29.df, size = 1) +
geom_ribbon(aes(x = support, ymin = dflx, ymax = dfux), sub29.df, alpha = 0.3) +
geom_line(aes(x = support, y = dflx), sub29.df, colour = "#D2BBFB") +
geom_line(aes(x = support, y = dfux), sub29.df, colour = "#D2BBFB") +
geom_line(aes(x = support, y = flx), sub29.df, colour = "#4358F9", linetype = 2, size = 0.5) +
geom_line(aes(x = support, y = fux), sub29.df, colour = "#4358F9", linetype = 2, size = 0.5) +
ggtitle(" Density Band, # 29  ") +
scale_colour_manual(name = "Density", values = c("#AD83F6", "#F3BB53", "black"),
labels = c("Fitted", "Observed", "Wass_mean"), guide="legend") +
ylab("Density")
density.29
density.66 <- ggplot() +
geom_line(aes(x = support, y = y, color = "Wass_mean"), fmean.df, size = 0.3) +
geom_line(aes(x = supp, y = den66, color = "Observed"), Denobs.df, size = 1)+
geom_line(aes(x = support, y = ffit, colour = "Fitted"), sub66.df, size = 1) +
geom_ribbon(aes(x = support, ymin = dflx, ymax = dfux), sub66.df, alpha = 0.3) +
geom_line(aes(x = support, y = dflx), sub66.df, colour = "#D2BBFB") +
geom_line(aes(x = support, y = dfux), sub66.df, colour = "#D2BBFB") +
geom_line(aes(x = support, y = flx), sub66.df, colour = "#4358F9", linetype = 2, size = 0.5) +
geom_line(aes(x = support, y = fux), sub66.df, colour = "#4358F9", linetype = 2, size = 0.5) +
ggtitle(" Density Band, # 66  ") +
scale_colour_manual(name = "Density", values = c("#AD83F6", "#F3BB53", "black"),
labels = c("Fitted", "Observed", "Wass_mean"), guide="legend") +
ylab("Density")
density.66 # 800 * 500
reaction.df <- read.table("reaction.time.txt", header = T) %>%
as.tibble() %>%
mutate_at(.vars = vars(Trtmt:B), .funs = as.factor) %>%
select(-Order, -Trtmt)
names(reaction.df) <- c("Simulus", "ElapsedTime", "ReactionTime")
mean(reaction.df$ReactionTime)
reaction.df %>%
group_by(Simulus) %>%
summarise(mean(ReactionTime))
reaction.df %>%
group_by(ElapsedTime) %>%
summarise(mean(ReactionTime)) # y_{.j.}
reaction.df %>%
group_by(Simulus, ElapsedTime) %>%
summarise(mean(ReactionTime)) # y_{ij.}
aov.fit <- aov(ReactionTime ~ Simulus*ElapsedTime, data = reaction.df)
summary(aov.fit)
qt(p = 1 - 0.05/2/3, df = 12)
aov.fit$residuals
sum(aov.fit$residuals^2)/12
sqrt(2*mse/12)
mse <- sum(aov.fit$residuals^2)/12
sqrt(2*mse/12)
mu.hat <- mean(reaction.df$ReactionTime) # overall mean y_{...}
y_i.. <- reaction.df %>%
group_by(Simulus) %>%
summarise(ReactionTime_mean = mean(ReactionTime)) # y_{i..}
y_.j. <- reaction.df %>%
group_by(ElapsedTime) %>%
summarise(ReactionTime_mean = mean(ReactionTime)) # y_{.j.}
y_ij. <- reaction.df %>%
group_by(Simulus, ElapsedTime) %>%
summarise(ReactionTime_mean = mean(ReactionTime)) # y_{ij.}
(mu.hat <- mean(reaction.df$ReactionTime)) # overall mean y_{...}
(y_i.. <- reaction.df %>%
group_by(Simulus) %>%
summarise(ReactionTime_mean = mean(ReactionTime))) # y_{i..}
(y_.j. <- reaction.df %>%
group_by(ElapsedTime) %>%
summarise(ReactionTime_mean = mean(ReactionTime))) # y_{.j.}
y_ij. <- reaction.df %>%
group_by(Simulus, ElapsedTime) %>%
summarise(ReactionTime_mean = mean(ReactionTime), ReactionTime_var = var(ReactionTime)) # y_{ij.}
y_ij.
y_ij._var <- reaction.df %>%
group_by(Simulus, ElapsedTime) %>%
summarise(ReactionTime_mean = mean(ReactionTime), ReactionTime_var = var(ReactionTime)) # y_{ij.}
y_ij._var
library(knitr)
library(kableExtra)
install.packages("ktableExtra")
install.packages("kableExtra")
library(kableExtra)
y_ij._var
mean_varTB <- data.frame(df1 = y_ij._var[1:3, 3:4], df2 = y_ij._var[4:6, 3:4])
mean_varTB
y_ij._var
rownames(mean_varTB) <- c("1", "2", "3")
mean_varTB
kable(mean_varTB, col.names = rep("mean", "variance"),2)
kable(mean_varTB, col.names = rep(c("mean", "variance"),2))
kable(mean_varTB, col.names = rep(c("mean", "variance"),2), row.names = c(1,2,3))
options(knitr.table.format = "html")
kable(mean_varTB, col.names = rep(c("mean", "variance"),2), row.names = c(1,2,3))
mean_varTB <- data.frame(df1 = y_ij._var[1:3, 3:4], df2 = y_ij._var[4:6, 3:4]) %>>% round(4)
mean_varTB
paste0("ElapsedTime",c(1,2,3))
paste0("ElapsedTime",c(1,2,3))
mean_varTB <- data.frame(df1 = y_ij._var[1:3, 3:4], df2 = y_ij._var[4:6, 3:4])
mean_varTB
kable(mean_varTB, col.names = rep(c("mean", "variance"),2), row.names = paste0("ElapsedTime",c(1,2,3)), digits = 8) %>%
kable_styling(full_width = F, position = "left")
kable(mean_varTB, col.names = rep(c("mean", "variance"),2), row.names = paste0("ElapsedTime",c("1","2","3")), digits = 8) %>%
kable_styling(full_width = F, position = "left")
kable(mean_varTB, col.names = rep(c("mean", "variance"),2), row.names = c("ElapsedTime1","ElapsedTime2","ElapsedTime3"), digits = 8) %>%
kable_styling(full_width = F, position = "left")
kable(mean_varTB, col.names = rep(c("mean", "variance"),2), row.names = c("ElapsedTime1","ElapsedTime2","ElapsedTime3"), digits = 8)
kable(mean_varTB, col.names = rep(c("mean", "variance"),2),  digits = 8) %>%
kable_styling(full_width = F, position = "left")
rownames(mean_varTB) = c("ElapsedTime1","ElapsedTime2","ElapsedTime3"),
rownames(mean_varTB) = c("ElapsedTime1","ElapsedTime2","ElapsedTime3")
options(knitr.table.format = "html")
kable(mean_varTB, col.names = rep(c("mean", "variance"),2), digits = 8) %>%
kable_styling(full_width = F, position = "left")
kable(mean_varTB, col.names = rep(c("mean", "variance"),2), digits = 8) %>%
kable_styling(full_width = F, position = "left") %>%
kable_styling("striped") %>%
add_header_above(c( "Group 1" = 2, "Group 2" = 2))
kable(mean_varTB, col.names = rep(c("mean", "variance"),2), digits = 8) %>%
kable_styling(full_width = F, position = "left") %>%
kable_styling("striped") %>%
add_header_above(c(" " = 1, "Group 1" = 2, "Group 2" = 2))
reaction.df
kable(mean_varTB, col.names = rep(c("mean", "variance"),2), digits = 8) %>%
kable_styling(full_width = F, position = "left") %>%
kable_styling("striped") %>%
add_header_above(c(" " = 1, "Simulus 1" = 2, "Simulus 2" = 2))
y_i.. <- reaction.df %>%  # y_{i..}
group_by(Simulus) %>%
summarise(ReactionTime_mean = mean(ReactionTime)) %>%
kable()
y_i.. <- reaction.df %>%  # y_{i..}
group_by(Simulus) %>%
summarise(ReactionTime_mean = mean(ReactionTime)) %>%
kable()
kable(y_i..)
y_i..
ss_total <- var(reaction.df$ReactionTime)*(nrow(reaction.df)-1)
cat("Given SS_{total} is "  var(reaction.df$ReactionTime)*(nrow(reaction.df)-1))
cat("Given SS_{total} is ",  var(reaction.df$ReactionTime)*(nrow(reaction.df)-1))
summary(aov.fit)->temp
temp
temp[[1]]
temp[[1]][2]
temp[[1]][2]%>%sum
y_ij._var$ReactionTime_mean %>%mean()
mean(mean_varTB$df1.ReactionTime_mean)
mean(mean_varTB$df1.ReactionTime_mean)-0.2281
mean(mean_varTB$df2.ReactionTime_mean)-0.2281
apply(mean_varTB, 1, mean)
apply(mean_varTB[c(1,3)], 1, mean)
apply(mean_varTB[c(1,3)], 1, mean)-0.2281
apply(mean_varTB[c(1,3)], 1, mean)-0.2281
-0.00143-0.0091
0.185+0.0321+0.00143-0.2281
0.178+0.0321+0.0091-0.2281
0.0089+0.00957
lm.fit
lm.fit <- lm(ReactionTime ~ Simulus*ElapsedTime, data = reaction.df)
lm.fit$coefficients
0.185-lm.fit$coefficients[2] -lm.fit$coefficients[3] -lm.fit$coefficients[1]
0.1789997-lm.fit$coefficients[2] -lm.fit$coefficients[4] -lm.fit$coefficients[1]
0.1786667-lm.fit$coefficients[2] -lm.fit$coefficients[4] -lm.fit$coefficients[1]
(mu.hat <- mean(reaction.df$ReactionTime)) # overall mean y_{...}
y_i..-mu.hat
(mu.hat <- mean(reaction.df$ReactionTime)) # overall mean y_{...}
(y_i.. <- reaction.df %>%  # y_{i..}
group_by(Simulus) %>%
summarise(ReactionTime_mean = mean(ReactionTime)))
(y_.j. <- reaction.df %>%
group_by(ElapsedTime) %>%
summarise(ReactionTime_mean = mean(ReactionTime))) # y_{.j.}
y_ij._var <- reaction.df %>%
group_by(Simulus, ElapsedTime) %>%
summarise(ReactionTime_mean = mean(ReactionTime), ReactionTime_var = var(ReactionTime))
y_i..-mu.hat
y_i..
9*sum((y_i..$ReactionTime_mean-mu.hat)^2)
6*sum((y_.j.$ReactionTime_mean-mu.hat)^2)
y_ij._var
3*sum(y_ij._var$ReactionTime_mean-mu.hat)^2)
3*sum((y_ij._var$ReactionTime_mean-mu.hat)^2)
3*sum((y_ij._var$ReactionTime_mean-mu.hat)^2) -6*sum((y_.j.$ReactionTime_mean-mu.hat)^2)-9*sum((y_i..$ReactionTime_mean-mu.hat)^2)
0.02902094 -  0.02555
qt(p = 1 - 0.05/2/3, df = 12) # W_{B}
MSE <- sum(aov.fit$residuals^2)/12
MSE
2*sum(y_ij._var$ReactionTime_var)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
obser.table <- data.frame(b1 = c("(1)", "ab", "ac", "bc"), v1 = c(-3, 2, 2, 1),
b2 = c("a", "b", "c", "abc"), v2 = c(0, -1, -1, 6),
b3 = c("(1)", "c", "ab", "abc"), v3 = c(-1, 0, 3, 5),
b4 = c("a", "b", "ac", "bc"), v4 = c(1, 0, 1, 1))
obser.table
14^2/16
15.48*1.07375/4
4+16+49+9
78/4-136/8
?expand.grid
B = factor(-1, 1)
B
?factor
beverage.data <- expand.grid(A = factor(c(-1, 1)), B = factor(c(-1, 1)), C = factor(c(-1, 1)))
beverage.data
treat.combi <- expand.grid(A = factor(c(-1, 1)), B = factor(c(-1, 1)), C = factor(c(-1, 1)))
treat.combi
beverage.rep1 <- data.frame(treat.combi, y = c(-3, 0, -1, 2, -1, 2, 1, 6))
beverage.rep1
beverage.rep2 <- data.frame(treat.combi, y = c(-1, 1, 0, 3, 0, 1, 1, 5))
data.all <- rbind(beverage.rep1, beverage.rep2)
data.all
beverage.treatment <- rbind(beverage.rep1, beverage.rep2)
treat.combi
data.all <- data.frame(beverage.treatment,
rep = rep(c(-1, 1), each = 8),
block = c(-1, 1, 1, -1, 1, -1, -1, 1, -1, 1, 1, -1, -1, 1, 1, -1))
summary(data.all)
treat.combi <- expand.grid(A = c(-1, 1), B = c(-1, 1), C = c(-1, 1))
beverage.rep1 <- data.frame(treat.combi, y = c(-3, 0, -1, 2, -1, 2, 1, 6))
beverage.rep2 <- data.frame(treat.combi, y = c(-1, 1, 0, 3, 0, 1, 1, 5))
beverage.treatment <- rbind(beverage.rep1, beverage.rep2)
data.all <- data.frame(beverage.treatment,
rep = rep(c(-1, 1), each = 8),
block = c(-1, 1, 1, -1, 1, -1, -1, 1, -1, 1, 1, -1, -1, 1, 1, -1))
summary(data.all)
data.all
beverage.fit <- lm(y ~ A*B*C + rep + block, data = data.all)
beverage.fit
anova(beverage.fit)
beverage.fit
data.all
beverage.fit <- lm(y ~ A*B*C + rep + factor(block), data = data.all)
anova(beverage.fit)
data.all <- data.frame(beverage.treatment,
rep = rep(c(-1, 1), each = 8),
block = c(1, 2, 2, 1, 2, 1, 1, 2, 3, 4, 4, 3, 3, 4, 4, 3))
beverage.fit <- lm(y ~ A*B*C + rep + factor(block), data = data.all)
anova(beverage.fit)
anova(beverage.fit)->d
d$`Mean Sq`/0.75
d$`Mean Sq`/0.75->ee
pf(ee, 1, 5, lower.tail = F)
suitable.fit <- lm(y ~ A + B + C + rep + factor(block), data = data.all)
anova(suitable.fit)
anova(beverage.fit)
