y.nonnormal.var_model<-lm(y.nonconstant.var~x)
ls
ls()
grep("_model",x =ls() )
grep("_model",x =ls(),value = T )
modelname.list<-grep("_model",x =ls(),value = T )
modelname.list<-grep("_model",x =ls(),value = T )
model.list<-get(modelname.list)
model.list
modelname.list
typeof(modelname.list)
?get
for (i in 1:length(modelname.list)){
model.list[i]<-get(modelname.list[i])
}
length(modelname.list)
length(modelname.list)
modelname.list<-grep("_model",x =ls(),value = T )
for (i in 1:length(modelname.list)){
model.list[i]<-get(modelname.list[i])
}
model.list<-list()
model.list<-list(
)
model.list<-list()
for (i in 1:length(modelname.list)){
model.list[i]<-get(modelname.list[i])
}
get(modelname.list[i])
model.list<-list(4)
model.list<-list()
type(get(modelname.list[i]))
typeof(get(modelname.list[i]))
model.list<-list()
for (i in 1:length(modelname.list)){
model.list[[i]]<-get(modelname.list[i])
}
summary(model.list)
for( i in 1:4) plot(model.list[i],which=1)
for( i in 1:4) plot(model.list[[i]],which=1)
modelname.list
title<-c(expression(paste(y==1+2*x+epsilon, ", ",epsilon,"~" ,N(0,x^2)) ),
expression(paste(y==1+2*x+epsilon, ", ",epsilon,"~" ,"t(2)") ),
expression(paste(y==1+2*x+epsilon, ", ",epsilon,"~" ,"N(0,1)") ),
expression(paste(y==1+2*x+3*x^2+epsilon, ", ",epsilon,"~" ,"N(0,1)")))
typeof(title)
modelname.list
plot(x, y.nonconstant.var, pch=16, col=3,main=title[1])
color<-c(3,4,1,2)
plot(x, y.nonconstant.var, pch=16, col=color[1],main=title[1])
plot(x, y.nonnormal.var,pch=16,col=color[2],main=title[2]))
plot(x, y.nonnormal.var,pch=16,col=color[2],main=title[2])
plot(x, y.perfect, pch=16, col=color[3],main=title[3])
plot(x, y.quadratic, pch=16, col=color[4],main=title[4])
for( i in 1:4) plot(model.list[[i]],which=1,col=color[i],main=title[i])
for( i in 1:4) plot(model.list[[i]],which=1,col=color[i],caption =title[i])
modelname.list
y.nonnormal.var_model<-lm(y.nonnormal.var~x)
for( i in 1:4) plot(model.list[[i]],which=1,col=color[i],caption =title[i])
modelname.list<-grep("_model",x =ls(),value = T )
model.list<-list()
for (i in 1:length(modelname.list)){
model.list[[i]]<-get(modelname.list[i])
}
for( i in 1:4) plot(model.list[[i]],which=1,col=color[i],caption =title[i])
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE,fig.align = "center"
,fig.height=10,fig.width=14)
library(faraway)
library(faraway)
gamble.model<-lm(gamble ~ income, data = teengamb) # simple regression case
summary(gamble.model)
plot(gamble.model)
gamble.model<-lm(gamble ~ income, data = teengamb) # simple regression case
gamble.boxcox<-boxCox(gamble.model)
library(car)
gamble.model<-lm(gamble ~ income, data = teengamb) # simple regression case
gamble.boxcox<-boxCox(gamble.model)
gamble
View(teengamb)
gamble.model<-lm(gamble+0.01 ~ income, data = teengamb) # simple regression case
gamble.boxcox<-boxCox(gamble.model)
lambda.opt<-gamble.boxcox$x[which.max(gamble.boxcox$y)]
(lambda.opt<-gamble.boxcox$x[which.max(gamble.boxcox$y)])
gamble.boxcox<-boxCox(gamble.model)
gamble.model<-lm(gamble+0.001 ~ income, data = teengamb) # simple regression case
gamble.boxcox<-boxCox(gamble.model)
y.log<-exp(1+2*x+rnorm(100))
logy.model<-lm(y.log~x)
logY.model<-lm(y.log~x)
logY.model<-lm(y.log~x)
logY.boxcox<-boxCox(logY.model)
y.log<-exp(1+2*x+rnorm(100,sd=2))
logY.model<-lm(y.log~x)
logY.boxcox<-boxCox(logY.model)
set.seed(20171025)
y.log<-exp(1+2*x+rnorm(100,sd=2))
logY.model<-lm(y.log~x)
logY.boxcox<-boxCox(logY.model)
set.seed(20171025)
y.log<-exp(1+0.2*x+rnorm(100,sd=2))
logY.model<-lm(y.log~x)
logY.boxcox<-boxCox(logY.model)
set.seed(20171025)
y.log<-exp(1+0.2*x+rnorm(100,sd=5))
logY.model<-lm(y.log~x)
logY.boxcox<-boxCox(logY.model)
set.seed(20171025)
y.log<-exp(1+0.1*x+rnorm(100,sd=5))
logY.model<-lm(y.log~x)
logY.boxcox<-boxCox(logY.model)
set.seed(20171025)
y.log<-exp(1+0.02*x+rnorm(100,sd=5))
logY.model<-lm(y.log~x)
logY.boxcox<-boxCox(logY.model)
set.seed(20171025)
y.log<-exp(0.1+0.02*x+rnorm(100,sd=5))
logY.model<-lm(y.log~x)
logY.boxcox<-boxCox(logY.model)
set.seed(20171025)
y.log<-exp(0.1+0.02*x+rnorm(100,sd=1))
logY.model<-lm(y.log~x)
logY.boxcox<-boxCox(logY.model)
lambda.opt = logY.boxcox$x[which.max(logY.boxcox$y)]
(lambda.opt = logY.boxcox$x[which.max(logY.boxcox$y)])
(lambda.opt = logY.boxcox$x[which.max(logY.boxcox$y)])
logY.boxcox<-boxCox(logY.model)
?pairs
colnames(teengamb)
pairs(~status+income+verbal+gamble,data = teengamb)
?avPlot
mul.model<-lm(gamble ~. ,data = teengamb)
avPlots(mul.model)
mul.model<-lm(gamble ~.,data = teengamb)
colnames(teengamb)
mul.model
summary(mul.model)
?teengamb
?prostate
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE,fig.align = "center")
library(faraway)
linear.model<-lm(gamble ~ income, data = teengamb) # simple regression case
anova(linear.model)
library(alr4)
library(ggplot2)
a.lm <- lm(fertility~ppgdp, data=UN11)
qplot(UN11$ppgdp,UN11$fertility,UN11)
abline(a.lm, col="red")
qplot(UN11$ppgdp,UN11$fertility,UN11)
abline(a.lm, col="red")
attach(UN11)
a.lm <- lm(log(fertility)~log(ppgdp), data=UN11)
qplot(log(UN11$ppgdp),log(UN11$fertility),UN11)
abline(a.lm, col="red")
library(faraway)
attach(prostate)
b.lm = lm(lcavol~lpsa, data=prostate)
plot(prostate$lcavol~prostate$lpsa, main="lcavol and lpsa")
abline(b.lm)
lcavol=prostate$lcavol
lpsa=prostate$lpsa
xbar=mean(lcavol)
Ybar=mean(lpsa)
Sxx=sum((lcavol-xbar)^2)
Syy=sum((lpsa-Ybar)^2)
Sxy=sum((lcavol-xbar)*(lpsa-Ybar))
b1=Sxy/Sxx
b0=Ybar-b1*xbar
b1
b0
abline(b0,b1,col= "red")
library(faraway)
attach(prostate)
b.lm = lm(lcavol~lpsa, data=prostate)
plot(prostate$lcavol~prostate$lpsa, main="lcavol and lpsa")
abline(b.lm)
lcavol=prostate$lcavol
lpsa=prostate$lpsa
xbar=mean(lcavol)
Ybar=mean(lpsa)
Sxx=sum((lcavol-xbar)^2)
Syy=sum((lpsa-Ybar)^2)
Sxy=sum((lcavol-xbar)*(lpsa-Ybar))
b1=Sxy/Sxx
b0=Ybar-b1*xbar
abline(b0,b1,col= "red")
b0
b1
plot(prostate$lcavol~prostate$lpsa, main="lcavol and lpsa")
abline(b0,b1,col= "red")
R=(Sxy/(Sxx*Syy)^(1/2))
sigmaHatsquare=(Syy*(1-R^2))/(n-2)
sigmaHat=sigmaHatsquare^(1/2)
n=97
R=(Sxy/(Sxx*Syy)^(1/2))
sigmaHatsquare=(Syy*(1-R^2))/(n-2)
sigmaHat=sigmaHatsquare^(1/2)
StError_b1=sigmaHat/(Sxx)^(1/2)
StError_b0=sigmaHat*(1/n+xbar^2/(Sxx))^(1/2)
cov=xbar*sigmaHatsquare/Sxx
b=lm(lpsa~lcavol, data=prostate)
c=qt(1-0.05/2,b$df)
summary(b)
library(alr4)
attach(ftcollinstemp)
a.lm=lm(winter~fall,data=ftcollinstemp)
plot(x=fall, y=winter)
abline(a.lm)
library(alr4)
attach(Heights)
a=lm(dheight~mheight,data=Heights)
summary(a)
c=confint(a,level=0.9)
c
p=predict(a, new=data.frame(mheight=61), interval="prediction", level=0.99, SE=T)
p
?invTranPlot
attach(UN11)
un1.lm = lm(fertility~ppgdp)
invTranPlot(fertility~ppgdp, lambda = c(0, 0.5, 1), optimal = F)library(alr4)
library(car)
invTranPlot(fertility~ppgdp,lambda = c(0, 0.5, 1),optimal = F)#library(alr4)
y05<-(fertility^0.5-1)/0.5
olstrans<-lm(y05~ppgdp)
summary(olstrans)
anova(olstrans)
x05<-(ppgdp^0.5-1)/0.5
olstrans<-lm(fertility~x05)
anova(olstrans)
x05<-log(ppgdp)
olstrans<-lm(fertility~x05)
anova(olstrans)
invTranPlot(fertility~ppgdp,lambda = c(0, 0.5, 1),optimal = F)#library(alr4)
olstrans<-lm(fertility~ppgdp)
anova(olstrans)
par(mfrow=c(1,2),mar=c(2,2,3,2))
set.seed(20171028)
xa<-arima.sim(n=100,model = list(ma=1.2,ar=-0.6))
xb<-arima.sim(n=100,model = list(ar=c(-0.2,0.48)))
main.a<-expression(X[t]==-0.6*X[t-1]-1.2*Z[t-1]+Z[t])
main.b<-expression(X[t]==-0.2*X[t-1]+0.48*X[t-2]+Z[t])
plot(xa,type="l",xlab="t",ylab=expression(X[t]),main=main.a)
plot(xb,type="l",xlab="t",ylab=expression(X[t]),main=main.b)
acf(xa,plot = FALSE)[1]# estimate of \rho_1 is -0.38
acf(xa,plot = FALSE)
acf(xa,plot = FALSE);acf(xb,plot = FALSE)
?ARMAacf
(theo_acf.a <- ARMAacf(ma=1.2,ar=-0.6,lag.max = 20, pacf = FALSE)) # theoretical ACF of a
(theo_acf.b <- ARMAacf(ar=c(-0.2,0.48),lag.max = 20, pacf = FALSE)) # theoretical ACF of b
(theo_pacf.a <- ARMAacf(ma=1.2,ar=-0.6,lag.max = 20, pacf = TRUE)) # theoretical ACF of a
(theo_pacf.b <- ARMAacf(ar=c(-0.2,0.48),lag.max = 20, pacf = TRUE)) # theoretical ACF of b
par(mfrow=c(2,2))
plot(theo_acf.a,type = "h",ylim = c(-1,1),main = "Theoretical ACF of EG(a)",
col = "red", ylab =expression(rho[X](h)), xlab = "h")
abline(h = 0) # Add horizontal line
plot(theo_acf.a,type = "h",ylim = c(-1,1),main = "Theoretical ACF of EG(a)",
col = "red", ylab =expression(rho[X](h)), xlab = "h")
abline(h = 0) # Add horizontal line
plot(theo_acf.b,type = "h",ylim = c(-1,1),main = "Theoretical ACF of EG(b)",
col = "red", ylab = expression(rho[X](h)), xlab = "h")
abline(h = 0) # Add horizontal line
plot(theo_pacf.a,type = "h",ylim = c(-1,1),main = "Theoretical PACF of EG(a)",
col = "red", ylab =expression(aplha[X](h)), xlab = "h")
abline(h = 0) # Add horizontal line
plot(theo_pacf.b,type = "h",ylim = c(-1,1),main = "Theoretical PACF of EG(b)",
col = "red", ylab = expression(alpha[X](h)), xlab = "h")
abline(h = 0) # Add horizontal line
acf(xa,main=paste("sample acf of ",main.a))
par(mfrow=c(2,2))
acf(xa,main=paste("sample acf of ",main.a))
par(mfrow=c(2,2),mar=c(2,2,4,3))
acf(xa,main=paste("sample acf of ",main.a))
par(mfrow=c(2,2),mar=c(2,2,5,3))
acf(xa,main=paste("sample acf of ",main.a))
par(mfrow=c(2,2),mar=c(2,2,15,3))
acf(xa,main=paste("sample acf of ",main.a))
par(mfrow=c(2,2),mar=c(2,10,4,3))
acf(xa,main=paste("sample acf of ",main.a))
library(pipeR)
(theo_acf.a <- ARMAacf(ma=1.2,ar=-0.6,lag.max = 20, pacf = FALSE)%>>%round(2)) # theoretical ACF of a
acf(xa,plot = FALSE)%>>%round(2);acf(xb,plot = FALSE)%>>%round(2)
acf(xa,plot = FALSE)
6/14*70
650+140+6/14*70+30+28/40*130+180+50
6+2i
Mod(6+2i)
40^0.5
x<-c(1+2i,3+4i)
x<-c(1+2i,3+4i)
y<-c(4+5i,5+6i)
Conj(x)
xH<-Conj(x)
xH%*%x
Mod(y)
yH<-Conj(y)
yH%*%y
xH%*%y
Mod(xH%*%y)
Mod(xH%*%y)^0.5
Mod(xH%*%y)^2
(xH%*%x )* (yH%*%y)
yH%*%x
(yH%*%x)*(xH%*%y)
y%*%x%*%y
y%*%y%*%x
23*3+14*4
set.seed(1234)
ar2<-arima.sim(model = list(ar=c(0.8,-0.2),sd=2),n=300)
yw<-ar.yw(ar2,order=2)
y'w
yw
set.seed(1234)
ar2<-arima.sim(model = list(ar=c(0.8,-0.2),sd=2),n=300)
yw<-ar.yw(ar2,order=2)
yw
?arima.sim
yw
set.seed(1234)
set.seed(1234)
set.seed(1234)
set.seed(1234)
ar2<-arima.sim(model = list(ar=c(0.8,-0.2),sd=1),n=300)
yw<-ar.yw(ar2,order=2)
yw
set.seed(1234)
ar2<-arima.sim(model = list(ar=c(0.8,-0.2),sd=13),n=300)
yw<-ar.yw(ar2,order=2)
yw
ar2<-arima.sim(model = list(ar=c(0.8,-0.2),sd=12),n=300)
yw<-ar.yw(ar2,order=2)
yw
ar2<-arima.sim(model = list(ar=c(0.8,-0.2),sd=2),n=300)
yw<-ar.yw(ar2,order=2)
yw
set.seed(1234)
ar2<-arima.sim(model = list(ar=c(0.8,-0.2),sd=2),n=300)
yw<-ar.yw(ar2,order=2)
yw
set.seed(1234)
ar2<-arima.sim(model = list(ar=c(0.8,-0.2),sd=2),n=300)
yw<-ar.yw(ar2,order=2)
yw
set.seed(1234)
ar2<-arima.sim(model = list(ar=c(0.8,-0.2),sd=2),n=300)
yw<-ar.yw(ar2,order=2)
yw
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE,fig.align = "center"
,fig.height=10,fig.width=14)
library(faraway)
library(faraway)
colnames(teengamb)
pairs(~status+income+verbal+gamble,data = teengamb) # do NOT include categorical variables!
plot(gamble~income,data = teengamb)
plot(gamble~income,data = teengamb)
quadratic.model<-lm(gamble~income+I(income^2),data = teengamb)
sumary(quadratic.model)
summary(quadratic.model)
mul.model<-lm(gamble ~.,data = teengamb)
summary(mul.model)
sumary(teengamb)
summary(teengamb)
class(teengamb)
typeof(teengamb)
summary(teengamb)
apply(teengamb,summary)
apply(teengamb,2,summary)
typeof(teengamb,2,summary)
apply(teengamb,2,typeof)
head(teengamb)
apply(teengamb,2,class)
apply(teengamb,2,typeof)
head(teengamb)
str(teengamb)
gender <- c(rep("male",20), rep("female", 30))
str(gender)
gender <- factor(gender)
str(gender)
typeof(gender)
summary(gender)
str(gender)
gender <- c(rep("male",20), rep("female", 30))
str(gender)
gender <- factor(gender)
str(gender)
?teengamb
factor.model<-lm(gamble~sex+income,data = teengamb)
summary(factor.model)
factor.model<-lm(gamble~factor(sex)+income,data = teengamb)
summary(factor.model)
View(teengamb)
gender
?with
?within
teengamb.factorSex<-transform(teengamb,sex=as.factor(sex))
View(teengamb.factorSex)
teengamb.factorSex$sex
factor.model<-lm(gamble~sex+income+sex:income,data = teengamb)
summary(factor.model)
View(teengamb.factorSex)
factor.model<-lm(gamble~sex+income+sex:income,data = teengamb.factorSex)
summary(factor.model)
lm(gamble~sex*income,data = teengamb.factorSex)
str(gender)
str(gender)
gender <- c(rep("male",20), rep("female", 30))
str(gender)
gender <- factor(gender)
str(gender)
teengamb.factorSex<-transform(teengamb,sex=as.factor(sex)) # male is 1, female is 0.
teengamb.factorSex$sex
?teengamb
teengamb.factorSex<-transform(teengamb,sex=as.factor(sex)) # male is 0, female is 1.
View(teengamb.factorSex)
View(teengamb)
str(teengamb.factorSex)
-2.6596+ 5.7996
-2.6596+ 5.7996
6.5181  -6.3432
plot(income,gamble,data=teengamb)
View(teengamb.factorSex)
plot(gamble~income,data=teengamb)
plot(gamble~income,data=teengamb,col=2)
plot(gamble~income,data=teengamb,col=2,pch=16)
plot(gamble~income,data=teengamb,col=2,pch=16,subset = sex==1)
points(gamble~income,data=teengamb,col=1,pch=16,subset = sex==0) # male
plot(gamble~income,data=teengamb,col=2,pch=16,subset = sex==1) # female
points(gamble~income,data=teengamb,col=1,pch=16,subset = sex==0) # male
points(gamble~income,data=teengamb,col=1,pch=16) # male
plot(gamble~income,data=teengamb,col=2,pch=16,subset = sex==1) # female
points(gamble~income,data=teengamb,col=1,pch=16) # male
plot(gamble~income,data=teengamb,col=2,pch=16,subset = sex==1) # female
points(gamble~income,data=teengamb,col=1,pch=16,subset = sex==0) # male
plot(gamble~income,data=teengamb,col=2,pch=16,subset = sex==1) # female
points(gamble~income,data=teengamb,col=3,pch=16) # male
abline(a=3.14,b=0.1749,col=2)
abline(a=-2.6596,b=6.5181,col=3)
plot(gamble~income,data=teengamb,col=2,pch=16,subset = sex==1) # female
points(gamble~income,data=teengamb,col=3,pch=16) # male
abline(a=3.14,b=0.1749,col=2)
abline(a=-2.6596,b=6.5181,col=3)
plot(gamble~income,data=teengamb,col=2,pch=16,subset = sex==1) # female
points(gamble~income,data=teengamb,col=4,pch=16,subset = sex==0) # male
abline(a=3.14,b=0.1749,col=2)
abline(a=-2.6596,b=6.5181,col=4)
legend(x=10,y=15,legend = c("male,female"),col=c(4,2))
legend(x=7,y=18,legend = c("male,female"),col=c(4,2))
legend(x=7,y=18,legend = c("male,female"),col=c(4,2),lwd=2)
legend(x=7,y=18,legend = c("male","female"),col=c(4,2),lwd=2)
plot(gamble~income,data=teengamb,col=2,pch=16,subset = sex==1) # female
points(gamble~income,data=teengamb,col=4,pch=16,subset = sex==0) # male
abline(a=3.14,b=0.1749,col=2,lwd=2)
abline(a=-2.6596,b=6.5181,col=4,lwd=2)
legend(x=7,y=18,legend = c("male","female"),col=c(4,2),lwd=2)
plot(gamble~income,data=teengamb,col=2,pch=16,subset = sex==1) # female
points(gamble~income,data=teengamb,col=4,pch=16,subset = sex==0) # male
abline(a=3.14,b=0.1749,col=2,lwd=2)
abline(a=-2.6596,b=6.5181,col=4,lwd=2)
legend(x=7,y=18,legend = c("male","female"),col=c(4,2),lwd=2,pch=16)
gender <- c(rep("male",20), rep("female", 30))
gender <- as.factor(gender)
str(gender)
6.405^2(13-1)
6.405^2*(13-1)
sqrt(176.33/492.2883)
sqrt(176.33/492.2883)*1/1.19
1.19/sqrt(176.33/492.2883)
6.405^2(13-1)
6.405^2*(13-1)
sqrt(176.33/492.2883)
1.1852/sqrt(176.33/492.2883)
450+200+400+180+250+150+250+200+150
?read.table
?read.csv
?read.csv
?readHTMLTable
??
readHTMLTable
x<-c(1,1.5,1.6,1.4,1.5,1.7)
x
x<ts(x)
x<-ts(x)
x
acf(x,plot = F)
mean(x[1:4])
mean(x[3:6])
(x[1:4]-1.375)%*%(x[3:6]-1.55)
(x[1:4]-1.375)^2
sum((x[1:4]-1.375)^2)
sum(x[3:6]-1.55)^2)
sum((x[3:6]-1.55)^2)
-0.045/sqrt(0.2075*0.05)
acf(x,plot = F)
x1<-x[1:4]
y<-x[3:6]
corr(x1,y)
cor(x1,y)
1.36-2*99/100*0.6
0.157+1.96*sqrt(0.172)
0.157-1.96*sqrt(0.172)
0.6/1.36
1-3*(0.6/1.36)^2+4*(0.6/1.36)^4
1+2*(0.6/1.36)^2
0.157-1.96*sqrt(0.172)/10
0.157+1.96*sqrt(0.172)/10
(0.438-0.4412)/sqrt(0.5676)*10
0.145/sqrt(1.3893)*10
setwd("~/Documents/GitHub/PSTAT TA material/PSTAT_126_17Fall")
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
## knitr::opts_chunk$set(warning=FALSE, message=FALSE,fig.align='center',fig.height=3)
## For your homework solutions, you may want to hind warning and long messages, center the figures, and set the default height of figures.
sample1 <- rnorm(n = 100, mean = 3, sd = 1)
sample2 <- rnorm(n = 100, mean = 5, sd = 1)
t.test(sample1, sample2)
